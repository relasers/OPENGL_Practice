#include "Madurai.h"



CMadurai::CMadurai()
{
}

CMadurai::CMadurai(POINT pt)
{
	point.x = pt.x;
	point.y = pt.y;
}


CMadurai::~CMadurai()
{
}

void CMadurai::Draw()
{
		glColor4f(R, G, B, 1.0f);
		glPointSize(1);
		glBegin(GL_POINTS);
		for (int j = 0; j < work; j += 1) {
			int R = j;
			for (int i = 0; i < 960; ++i) {
				glVertex2f(point.x + 
					(float)(radius + i / 360 + R)*cos((float)i*PI / 180.0),
					point.y + 
					(float)(radius + i / 360 + R)*sin((float)i*PI / 180.0));
				R++;
			}
		}
		
		glEnd();

}

void CMadurai::Update(int w, int h)
{
	srand((unsigned)time(nullptr)|(LONG)this);

	R = rand() % 10 / 10.0;
	G = rand() % 10 / 10.0;
	B = rand() % 10 / 10.0;
	(++work)%=50;
}

void CMadurai::IncreaseSpd()
{
	speed++;
	if (speed >= MX_Speed) {
		speed = MX_Speed;
	}
}

void CMadurai::DecreaseSpd()
{
	speed--;
	if (speed <= MN_Speed) {
		speed = MN_Speed;
	}
}
